/*


핵심 개념: 특정 객체에서 다른 객체와 상호작용하기
1-1. Person에 새로운 함수를 만들어보세요. 함수명은 TurnOnAircon()이고, 에어컨을 전원을 켜야 합니다.
	Hint: 3단원의 2번 문제에서 있었던 문제를 잘 생각해보세요.
	
	개발 Tip: 클래스에 새로운 함수를 만드는 행위는 주어+동사 관계를 생각하면 쉽습니다.
	주어 - 해당 클래스의 객체, 동사 - 클래스의 함수 -> 나는(Person) 걷는다. (Walk)
	class Person
	{
	public:
		void Walk();
	}

	여기서 더 나아가면 '목적어'를 생각할 수 있습니다. -> 나는(Person) 밥(???)을 먹는다.(Eat)
	여기서 밥은 Person의 정보가 아닙니다. 밥과 Person은 별도의 객체이므로 목적어가 필요한 경우, 이를 "매개변수"로 받으면 됩니다.
	class Person
	{
	public:
		void Eat(밥 bob);
	}

	이를 고려해서 2번 문제를 풀어보세요.


1-2. Person에서 Emotion이라는 새로운 함수를 만들어보세요. 
	Emotion 함수는 에어컨이 켜져있다면 "Happy!"를, 꺼져있다면 "Sad..." 문자열을 출력해야 합니다.


핵심 개념: 3단원과 4단원 문제들을 잘 풀고 이해했다면, 이번 문제를 풀어보세요.
Bonus 2. Main.cpp에는 동적할당된 두 Person 객체들을 스왑하는 함수 SwapPerson이라는 함수가 정의되어있습니다.
	하지만 실제로 main 함수에서 SwapPerson 함수를 사용해보면 제대로 동작하지 않습니다.
	문제가 되는 부분을 고쳐주세요.
	Warning: 단, 복사생성자가 호출되면 안됩니다! (복사생성자를 재정의해두었으니 별도 작업없이 호출여부는 확인 가능합니다)

*/